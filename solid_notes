
     RED   GREEN   REFACTOR

1. is it DRY?
2. does it have one responsibilty?
   each class should do one thing and do it well.
3. does everything in it change at the same rate?
4. does it depend on things that chage less often than it does?
5. Views: extract strings to i18n


===    REFACTOR     ===

     ->- Extract ->-
    |               |
    |               |
    Refactor -<- Inject

  Refactor, not because you KNOW  the abstraction,
    but because you want to find it.


  Laws

  1. Tell, Don't Ask
  2. Law of Demeter
  3. Open-Closed Principle
      Class should allow (assume) extension but not modification
  4. Liskov-Substitution Principle
  5. Dependency Inversion Principle
  6. Squint test


    TDD
  1. Provide a very clear usefull error message

  Code review
  1.  Check the migrations, are they written properly?
  2.  Check 'green', duplication?
  3.  Pull shoud be small


  Sandi Metz's rules
  1. Class has to be less than 100 lines
  2. method has to be no longer 5 lines
  3. pass no more than 4 parameters to a method
  4. controller can instantiate only one object
